{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","leftTimeZone","moment","tz","zone","rightTimeZone","modal","components","timeGutterHeader","react_default","a","createElement","className","_this","abbr","Date","now","getVulgarUtcOffsetText","utcOffset","title","name","onClick","handleSwitchLeftTimeZoneButtonClick","handleSwitchRightTimeZoneButtonClick","timeSlotWrapper","props","typedProps","undefined","resource","dateAndTimeUtc","utc","value","dateAndTimeTzLeft","clone","dateAndTimeTzRight","format","children","setState","side","search","handleSwitchTimeZoneSearchInputChange","event","currentTarget","Error","Object","objectSpread","handleSwitchTimeZoneSelectChange","handleCloseModalButtonClick","offsetMinutes","offsetSign","Math","sign","offsetHours","abs","floor","offsetHoursFraction","toFixed","substring","concat","offsetFraction","_this2","this","results","names","map","n","vulgarOffset","fractionalOffset","getFractionalUtcOffsetText","filter","toUpperCase","includes","onChange","placeholder","ref","focus","size","key","Fragment","react_big_calendar_esm","localizer","events","defaultView","scrollToTime","createPortal","renderSwitchModal","document","body","Component","BigCalendar","momentLocalizer","start","startOf","toDate","end","endOf","add","render","App_App","getElementById"],"mappings":"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","file":"static/js/main.d4df09a2.chunk.js","sourcesContent":["import './App.css';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport React, { Component, ReactElement, ChangeEventHandler } from 'react';\nimport BigCalendar, { Components } from 'react-big-calendar';\nimport moment, { MomentZone } from 'moment';\nimport tz from 'moment-timezone';\nimport { createPortal } from 'react-dom';\n\ntype AppState = {\n  leftTimeZone: MomentZone;\n  rightTimeZone: MomentZone;\n  modal: null | { side: 'left' | 'right'; search: string; };\n};\n\nexport default class App extends Component<{}, AppState> {\n  public readonly state: AppState = {\n    leftTimeZone: moment.tz.zone('America/New_York')!,\n    rightTimeZone: moment.tz.zone('Europe/Prague')!,\n    modal: null,\n  };\n\n  private static readonly localizer = BigCalendar.momentLocalizer(moment);\n\n  private static readonly events = [\n    {\n      title: 'This day',\n      start: moment().startOf('day').toDate(),\n      end: moment().endOf('day').toDate(),\n    },\n    {\n      title: 'Now for an hour',\n      start: moment().toDate(),\n      end: moment().add(1, 'hour').toDate(),\n    }\n  ];\n\n  private components: Components = {\n    timeGutterHeader: () => {\n      return (\n        // Note that `rbc-time-header-gutter` is to have the header dynamically strethed to match the width of the gutter by RBC\n        <div className=\"gutterSplit rbc-time-header-gutter\">\n          <span>\n            <span>{this.state.leftTimeZone.abbr(Date.now())}</span>\n            <span>{this.getVulgarUtcOffsetText(this.state.leftTimeZone.utcOffset(Date.now()))}</span>\n            <span className=\"infoIcon\" title={this.state.leftTimeZone.name}>i</span>\n            <button onClick={this.handleSwitchLeftTimeZoneButtonClick}>…</button>\n          </span>\n          <span>\n            <span>{this.state.rightTimeZone.abbr(Date.now())}</span>\n            <span>{this.getVulgarUtcOffsetText(this.state.rightTimeZone.utcOffset(Date.now()))}</span>\n            <span className=\"infoIcon\" title={this.state.rightTimeZone.name}>i</span>\n            <button onClick={this.handleSwitchRightTimeZoneButtonClick}>…</button>\n          </span>\n        </div>\n      );\n    },\n    timeSlotWrapper: (props) => {\n      const typedProps: { value: Date, resource: null | undefined, children: ReactElement } = props as any;\n      if (typedProps.resource === undefined) {\n        const dateAndTimeUtc = moment.utc(typedProps.value);\n        const dateAndTimeTzLeft = dateAndTimeUtc.clone().tz(this.state.leftTimeZone.name);\n        const dateAndTimeTzRight = dateAndTimeUtc.clone().tz(this.state.rightTimeZone.name);\n        return (\n          <div className=\"gutterSplit rbc-time-slot\">\n            <span title={dateAndTimeTzLeft.format()}>\n              {dateAndTimeTzLeft.format('HH:mm A')}\n            </span>\n            <span title={dateAndTimeTzRight.format()}>\n              {dateAndTimeTzRight.format('HH:mm A')}\n            </span>\n          </div>\n        );\n      }\n\n      return typedProps.children;\n    },\n  };\n\n  private getVulgarUtcOffsetText(offsetMinutes: number) {\n    const offsetSign = ['+', '', '-'][Math.sign(offsetMinutes / 60) + 1 /* Convert sign -1 | 0 | 1 to index 0 | 1 | 2 */];\n    const offsetHours = Math.abs(Math.floor(offsetMinutes / 60));\n    let offsetHoursFraction = (Math.abs(offsetMinutes / 60) % 1).toFixed(2).substring(1) /* Discard 0 leaving fraction */;\n\n    // http://unicodefractions.com/\n    switch (offsetHoursFraction) {\n      case '.00': offsetHoursFraction = ''; break;\n      case '.25': offsetHoursFraction = `¼`; break;\n      case '.50': offsetHoursFraction = `½`; break;\n      case '.75': offsetHoursFraction = `¾`; break;\n    }\n\n    return `UTC${offsetSign}${offsetHours || ''}${offsetHoursFraction}`;\n  }\n\n  private getFractionalUtcOffsetText(offsetMinutes: number) {\n    const offsetSign = ['+', '', '-'][Math.sign(offsetMinutes / 60) + 1 /* Convert sign -1 | 0 | 1 to index 0 | 1 | 2 */];\n    const offsetFraction = offsetMinutes / 60; // 0.5\n    return `UTC${offsetSign}${offsetFraction}`;\n  }\n\n  private renderSwitchModal() {\n    if (this.state.modal === null) {\n      throw new Error('Invalid state');\n    }\n\n    let value = '';\n    switch (this.state.modal.side) {\n      case 'left': value = this.state.leftTimeZone.name; break;\n      case 'right': value = this.state.rightTimeZone.name; break;\n    }\n\n    const search = this.state.modal.search;\n    const results = moment.tz.names()\n      .map(n => moment.tz.zone(n)!)\n      .map(tz => ({ name: tz.name, offsetMinutes: tz.utcOffset(Date.now()) }))\n      .map(tz => ({ name: tz.name, vulgarOffset: this.getVulgarUtcOffsetText(tz.offsetMinutes), fractionalOffset: this.getFractionalUtcOffsetText(tz.offsetMinutes) }))\n\n      // Search the time zone name, vulgar offset and fractional offset to be able to search all time zones with a given offset\n      .filter(tz => (tz.name.toUpperCase() + ' ' + tz.vulgarOffset + ' ' + tz.fractionalOffset).includes(search.toUpperCase()));\n\n    return (\n      <div className=\"modal\">\n        <div>\n          Change the {this.state.modal.side} time zone\n          <button title=\"Close\" onClick={this.handleCloseModalButtonClick}>✕</button>\n        </div>\n        <input value={this.state.modal.search} onChange={this.handleSwitchTimeZoneSearchInputChange} placeholder=\"Search: 'prague', '-2', '.75', …\" ref={n => n && n.focus()} />\n        <select value={value} onChange={this.handleSwitchTimeZoneSelectChange} size={20}>\n          {results.map(tz => <option value={tz.name} key={tz.name}>{tz.name} {tz.vulgarOffset}</option>)}\n        </select>\n      </div>\n    );\n  }\n\n  private readonly handleSwitchLeftTimeZoneButtonClick = () => {\n    this.setState({ modal: { side: 'left', search: '' } });\n  };\n\n  private readonly handleSwitchRightTimeZoneButtonClick = () => {\n    this.setState({ modal: { side: 'right', search: '' } });\n  };\n\n  private readonly handleSwitchTimeZoneSearchInputChange: ChangeEventHandler<HTMLInputElement> = event => {\n    const search = event.currentTarget.value;\n    this.setState(state => {\n      if (state.modal === null) {\n        throw new Error('Invalid state');\n      }\n\n      return { modal: { ...state.modal, search } };\n    });\n  };\n\n  private readonly handleSwitchTimeZoneSelectChange: ChangeEventHandler<HTMLSelectElement> = event => {\n    if (this.state.modal === null) {\n      throw new Error('Invalid state');\n    }\n\n    const tz = moment.tz.zone(event.currentTarget.value)!;\n    switch (this.state.modal.side) {\n      case 'left': this.setState({ leftTimeZone: tz, modal: null }); return;\n      case 'right': this.setState({ rightTimeZone: tz, modal: null }); return;\n    }\n\n    throw new Error('Called in an invalid state.');\n  };\n\n  private readonly handleCloseModalButtonClick = () => {\n    this.setState({ modal: null });\n  }\n\n  render() {\n    // Note that a reference to `tz` needs to be kept otherwise it gets compiled away even though it is needed for `moment.tz`\n    void tz;\n    return (\n      <>\n        <BigCalendar localizer={App.localizer} events={App.events} components={this.components} defaultView=\"week\" scrollToTime={new Date()} />\n        {this.state.modal && createPortal(this.renderSwitchModal(), document.body)}\n      </>\n    );\n  }\n};\n","import './index.css';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}